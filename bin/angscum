#!/usr/bin/env perl

use strict;
use warnings;

use AppConfig;
use Games::Angscum;
use Getopt::Long;
use Pod::Usage;
use File::HomeDir;
use File::Spec;
use File::Touch;

my %opts = (help => undef, verbose => undef);
GetOptions(\%opts, 'help|h', 'verbose|v+');

pod2usage(-verbose => 2) if $opts{help};

my $scum = Games::Angscum->new(%opts);
$scum->run;

my $config;
sub config {
    $config ||= do {
        my $app = AppConfig->new();
        $app->define(ui => { DEFAULT => 'Games::Angscum::TUI' });
        $app->file(config_file());
        $app;
    };
}

my $config_file;
sub config_file {
    $config_file ||= do {
        my $home = File::HomeDir->my_home;
        my $file = File::Spec->catfile($home, qw/ .angscum config /);
        touch($file) unless -e $file;
        $file;
    };
}


=pod

=head1 NAME

angscum - Angband save-scummer

=head1 SYNOPSIS

    angscum [-h|--help] [-v|--verbose]

=head1 DESCRIPTION

In the game Angband and its variants, "game saving" is not supported.  Saving
the game state is called "scumming". This script enables "scumming" by
allowing the player to save up to 5 different copies of their game state,
along with timestamps and short textual descriptions.

=head1 OPTIONS

=head2 -h, --help

Shows a helpful message.

=head2 -v, --verbose

Turns on verbose execution.

=head1 CONFIGURATION

Add info about resource file here

=head1 SEE ALSO

angband(1)
Games::Angscum(3pm)

=cut
